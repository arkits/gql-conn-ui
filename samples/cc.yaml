openapi: 3.0.3
info:
  title: Credit Card Security Deposit and Transaction API QA
  description: "This is the API which enables and supports Credit Card Security Deposit\
    \ Data Product.  More details about the Data Product here: https://exchange.cloud.capitalone.com/data-products/details/2052278.\
    \  Read-only consumers should integrate with DPI queries instead of directly invoking\
    \ from the exchange. If a valid use case is needed outside for the API consumers\
    \ should pursue an intake process with ASVSECUREDCARD.  This Service allows consumer\
    \ to:\n - create a security deposit record. each record maintains a complete immutable\
    \ history of the balance, status, and all transactions related to a given security\
    \ deposit id\n - fetch all current information about a single security deposit\
    \ record. Response may include, if requested, the entire history of the given\
    \ securityDepositId as well as all associated transactions\n - create a security\
    \ deposit transaction and attach it to a securityDepositId\n - fetch information\
    \ about a given security deposit transaction using the securityDepositTransactionId\n\
    \ - fetch all transactions related to a given securityDepositTransactionId by\
    \ way of the securityDepositPrimaryTransactionId\n\nThis is the API which enables\
    \ and supports Credit Card Security Deposit Data Product. Consumer should first\
    \ try to integrate with : \nhttps://exchange.cloud.capitalone.com/data-products/details/2052278\
    \ via DPI. If a valid use case is needed outside for the API consumers should\
    \ pursue\nan intake process with ASVSECUREDCARD.\n"
  contact:
    name: Old Bay
    url: https://capitalone.enterprise.slack.com/archives/C06LYRKC1B6
    email: oldbaydev@capitalone.com
  version: "1.0"
servers:
- url: ""
tags:
- name: SecurityDeposits
  description: "Endpoints related to CRUD operations on SecurityDeposits. Each SecurityDeposit\
    \ will contain an immutable record of its history as well as an immutable record\
    \ of all associated transactions (deposits, withdrawls, returns, refunds, etc,\
    \ etc). The SecurityDeposit balance summary information is kept up to date with\
    \ each transaction as well as status changes. When fetching SecurityDeposit information,\
    \ keep in mind that the data returned at the root of the response is the most\
    \ up-to-date balance/status information for the given securityDepositId. SecurityDeposits\
    \ have a one-to-many relationship with Transactions."
- name: Transactions
  description: "Endpoints related to CRUD operations on Security Deposit Transactions.\
    \ Transactions have a many-to-one relationship with SecurityDeposits. Each transaction\
    \ received, validated, and inserted into the database by this API will trigger\
    \ a susequent SecurityDeposit balance update. The insert operations are done concurrently,\
    \ so that if one fails, they both fail. A transaction cannot exist without a cooresponding\
    \ balance summary update."
paths:
  /credit-cards/security-deposits:
    post:
      tags:
      - SecurityDeposits
      summary: Create a New SecurityDepositId
      description: "This endpoint can be used to create a new securityDepositId. A\
        \ securityDepositId is used to track the current balance, transactions, status,\
        \ and history of a security deposit associated with a customer's secured credit\
        \ card. The request must contain a unique string as the `decisionRequestorKeyValue`\
        \ in order to prevent new ids getting created if multiple mistaken requests\
        \ are sent for the same entity. It is up to the requestor to ensure that the\
        \ values provided are unique enough so that a new securityDepositId can be\
        \ created for every desired entity. If a duplicate request is sent, the response\
        \ will be a 409 error witht the location of the already created entity in\
        \ the response headers."
      operationId: createSecurityDepositId
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityDepositRequest'
        required: true
      responses:
        "201":
          description: A new securityDepositId was successfully created.
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDepositIdResponse'
        "400":
          description: |
            | Error Code | Description |
            | --- | --- |
            | 101 | applicationId is a required field |
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
        "409":
          description: Security Deposit Id already exists for the given decisionRequestorKeyValue
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error409Response'
        "500":
          description: The API encountered an error while attempting to communicate
            with the back end.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
  /credit-cards/security-deposits/{securityDepositId}:
    get:
      tags:
      - SecurityDeposits
      summary: Retrieve securityDepositId data
      description: |
        This endpoint can be used to retreive the current balance, status, transactions, and complete history of a securityDepositId associated with a secured credit card. In addition, with query parameters, the response can optionally include additional information related to the requested securityDepositId. To include the entire history of the securityDepositId balance, or a complete list of its transactions, possible values (CSV) for the query param are:

        * `?include=depositHistory`
          {
            securityDepositIdSummaryData...
            depositHistory: [
            { ... },
            { ... },
            ......
            ]
          }

        * `?include=transactionHistory`
          {
            securityDepositIdSummaryData...
            transactionHistory: [
            { ... },
            { ... },
            ......
            ]
          }
        * `?include=depositHistory,transactionHistory`
        {
            securityDepositIdSummaryData...
            depositHistory: [
            { ... },
            { ... },
            ......
            ],
            transactionHistory: [
            { ... },
            { ... },
            ......
            ]
          }
      operationId: getSecurityDepositId
      parameters:
      - name: securityDepositId
        in: path
        description: The security deposit ID is a unique identifier for the security
          deposit associated with a secured card owned by either pre-booked (approved
          but not yet activated) and activated customers. This identifier is universally
          unique and is not related to other identifiers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 3568147e-cf25-44fe-bc01-f9c617c04866
      - name: include
        in: query
        description: A CSV of extra data to include in the response object. Possible
          values are __depositHistory__ and __transactionHistory__
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: "depositHistory,transactionHistory"
      responses:
        "200":
          description: the security deposit id search was successfully completed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDepositTotalResponse'
        "404":
          description: security deposit id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
        "500":
          description: The API encountered an error while attempting to communicate
            with the back end.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
    patch:
      tags:
      - SecurityDeposits
      summary: Update securityDepositId status
      description: Change the current status of a securityDepositId. The status of
        the securityDepositId will be changed and the new summary will be returned.
        Changing the stauts of a securityDepositId does not produce cooresponding
        transaction.
      operationId: updateSecurityDepositId
      parameters:
      - name: securityDepositId
        in: path
        description: The security deposit ID is a unique identifier for the security
          deposit associated with a secured card owned by either pre-booked (approved
          but not yet activated) and activated customers. This identifier is universally
          unique and is not related to other identifiers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 3568147e-cf25-44fe-bc01-f9c617c04866
      requestBody:
        content:
          application/json:
            schema:
              properties:
                securityDepositStatus:
                  $ref: '#/components/schemas/SecurityDepositStatus'
        required: true
      responses:
        "200":
          description: security deposit id status updated
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDepositIdResponse'
        "400":
          description: |
            | Error Code | Description |
            | --- | --- |
            | 101 | securityDepositStatus is a required property |
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
        "404":
          description: security deposit id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
        "500":
          description: The API encountered an error while attempting to communicate
            with the back end.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
  /credit-cards/security-deposits/{securityDepositId}/transactions:
    get:
      tags:
      - Transactions
      summary: Get all transactions related to a securityDepositId
      description: Retreive the complete list of transactions for an individual securityDepositId
      operationId: getSecurityDepositTransactions
      parameters:
      - name: securityDepositId
        in: path
        description: The security deposit ID is a unique identifier for the security
          deposit associated with a secured card owned by either pre-booked (approved
          but not yet activated) and activated customers. This identifier is universally
          unique and is not related to other identifiers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 3568147e-cf25-44fe-bc01-f9c617c04866
      responses:
        "200":
          description: security deposit id found and transactions returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDepositWithTransactionHistoryResponse'
        "404":
          description: security deposit id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
        "500":
          description: The API encountered an error while attempting to communicate
            with the back end.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
    post:
      tags:
      - Transactions
      summary: Create a transaction record
      description: |
        Create a new transaction record and return the updated balance. The transaction included in the request will first be validated. If valid, this will trigger a corresponding update to the securityDepositId balance summary data. Both updates will then be included in the response. The balamnce summary data on the root of the response, as well as all of the transactions in a list.


        * When creating a transaction, keep in mind that the field `securityDepositPrimaryTransactionId` is only required when the transaction is not of type `POSTED`. This is because `POSTED` transactions are their own primary transactions. So, in the case of a `POSTED` transaction, the response transaction will have identical `securityDepositTransactionId` and `securityDepositPrimaryTransactionId`s.

        * If the transaction is __not__ a `POSTED` transaction, the `securityDepositPrimaryTransactionId` is required. The value should be the `securityDepositTransactionId` from the original `POSTED` transaction that this subsequent transaction is clearing or returning or meant to be connected to.
      operationId: createSecurityDepositTransaction
      parameters:
      - name: securityDepositId
        in: path
        description: The security deposit ID is a unique identifier for the security
          deposit associated with a secured card owned by either pre-booked (approved
          but not yet activated) and activated customers. This identifier is universally
          unique and is not related to other identifiers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 3568147e-cf25-44fe-bc01-f9c617c04866
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityDepositTransactionBase'
        required: true
      responses:
        "201":
          description: A new transaction record was created
          headers:
            Location:
              $ref: '#/components/headers/Location'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDepositWithTransactionResponse'
        "400":
          description: |
            | Error Code | Description |
            | --- | --- |
            | 101 | request missing required fields |
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400Response'
        "404":
          description: security deposit id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
        "500":
          description: The API encountered an error while attempting to communicate
            with the back end.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
  /credit-cards/security-deposits/{securityDepositId}/transactions/{securityDepositTransactionId}:
    get:
      tags:
      - Transactions
      summary: Request a specific transaction by securityDepositTransactionId
      description: "Retrieves data about a given transaction by the securityDepositTransactionId.\
        \ The response will include all the data for the given transaction at the\
        \ root of the object. This endpoint can optionally include more data based\
        \ on the query param `?include=relatedTransactions`. If this is present in\
        \ the request, the response will include a list of all transaction with the\
        \ same `securityDepositPrimaryTransactionId`. This is the correct way to get\
        \ data on the lifecycle of a payment. \n"
      operationId: getSecurityDepositTransaction
      parameters:
      - name: securityDepositId
        in: path
        description: The security deposit ID is a unique identifier for the security
          deposit associated with a secured card owned by either pre-booked (approved
          but not yet activated) and activated customers. This identifier is universally
          unique and is not related to other identifiers.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 3568147e-cf25-44fe-bc01-f9c617c04866
      - name: securityDepositTransactionId
        in: path
        description: "The security deposit transaction ID is a unique identifier assigned\
          \ to each individual security deposit transaction. This ID is used to track\
          \ and differentiate specific transactions related to security deposits only,\
          \ allowing each transaction to be referenced and audited. It applies to\
          \ either pre-booked (approved but not yet activated) and activated customers,\
          \ ensuring all security deposit related transactions are captured throughout\
          \ Capital One's system."
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: 3568147e-cf25-44fe-bc01-f9c617c04866
      - name: include
        in: query
        description: A CSV of extra data to include in the response object. Possible
          values are __relatedTransactions__
        required: false
        style: form
        explode: false
        schema:
          type: string
          example: relatedTransactions
      responses:
        "200":
          description: Security Deposit Id Transactions found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityDepositTransactionResponseWithRelated'
        "404":
          description: security deposit id  or security deposit transaction id not
            found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404Response'
        "500":
          description: The API encountered an error while attempting to communicate
            with the back end.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500Response'
components:
  schemas:
    SecurityDepositId:
      type: string
      description: The security deposit ID is a unique identifier for the security
        deposit associated with a secured card owned by either pre-booked (approved
        but not yet activated) and activated customers. This identifier is universally
        unique and is not related to other identifiers.
      format: uuid
      example: 25c2eced-b77b-4597-a9c3-dcdb8fe658eb
      x-standardized-attribute-version-id: 4b150be7-9364-4106-bcd9-8c5e8a53b231
    SecurityDepositStatus:
      type: string
      description: The security deposit status is a string of text that determines
        the most recent operational status of the security deposit.
      example: OPEN
      enum:
      - OPEN
      - CLOSED
      - FROZEN
      x-standardized-attribute-version-id: ccc3875d-5864-4319-8e78-458395dbc458
    SecurityDepositAvailableBalance:
      type: number
      description: The security deposit available balance is the monetary amount of
        the cleared or available balance for a security deposit. The balance reflects
        the portion of the security deposit that is available for user utilization.
        The available balance is not equivalent to the credit limit.
      example: 0
      x-standardized-attribute-version-id: e5c594ed-13a3-46ff-ba95-184d6ed058a8
    SecurityDepositUnavailableBalance:
      type: number
      description: The security deposit unavailable balance is the monetary amount
        of the portion of the security deposit that is uncleared or unavailable for
        user utilization. This balance represents a temporary hold on funds. Uncleared
        deposited funds will not be reflected on linked credit lines until they are
        cleared.
      example: 0
      x-standardized-attribute-version-id: 06d43507-992e-4c3e-9c67-4f24a0361f8f
    LastUpdatedUtcTimestamp:
      type: string
      description: A last updated UTC timestamp is the most recent record of a point
        in time when an event occured. This timestamp is expressed in ISO 8601 datetime
        format \"YYYY-MM-DDThh:mm:ssTZD\" in Coordinated Universal Time (UTC).
      format: date-time
      example: 2021-07-01T01:30:45Z
    SecurityDepositTransactionId:
      type: string
      description: "The security deposit transaction ID is a unique identifier assigned\
        \ to each individual security deposit transaction. This ID is used to track\
        \ and differentiate specific transactions related to security deposits only,\
        \ allowing each transaction to be referenced and audited. It applies to either\
        \ pre-booked (approved but not yet activated) and activated customers, ensuring\
        \ all security deposit related transactions are captured throughout Capital\
        \ One's system."
      format: uuid
      example: 25c2eced-b77b-4597-a9c3-dcdb8fe658eb
    SecurityDepositPrimaryTransactionId:
      type: string
      description: "A security deposit primary transaction ID is an alphanumeric string\
        \ of text that uniquely identifies the primary transaction that is related\
        \ to a series of transactions. This ID is used to logically group transactions\
        \ that are part of the same series of events, such as funding, adjustments,\
        \ or refunds, within the security deposit process. All related transactions\
        \ reference the first transaction in the group, facilitating easier tracking\
        \ and management of associated transactions."
      format: uuid
      example: 25c2eced-b77b-4597-a9c3-dcdb8fe658eb
      x-standardized-attribute-version-id: aae59bec-f148-42f6-961a-8556da1a6317
    PostedSecurityDepositTransactionAmount:
      type: number
      description: A posted security deposit transaction amount is the monetary quantity
        recorded as a completed transaction for a security deposit that is tied to
        a credit card account. This amount is unsigned and represents the absolute
        value of the change and not whether it increased or decreased the customer’s
        balance.
      example: 25
      x-standardized-attribute-version-id: dfaf9f89-1b8d-4839-956f-57d298bc7783
    PostedSecurityDepositTransactionStatus:
      type: string
      description: "A posted security deposit transaction status is the state of a\
        \ financial transaction where the crediting or debiting of a security deposit's\
        \ balance that has been cleared, uncleared, or returned."
      example: posted
      enum:
      - posted
      - cleared
      - uncleared
      - returned
      x-standardized-attribute-version-id: 90d3cae3-ff50-44a5-b766-1eab665ebc3a
    TransactionDebitCreditType:
      type: string
      description: A transaction debit credit type is a categorization that indicates
        whether an action that intends to transfer assets will have the effect of
        decreasing or increasing the balance on the account of the customer initiating
        the action.
      example: credit
      enum:
      - credit
      - debit
      x-standardized-attribute-version-id: 672c628e-8981-4b88-a4e7-60cef5e96398
    SecurityDepositTransactionCategory:
      type: string
      description: "A security deposit transaction category is the classification\
        \ of a security deposit transaction that is tied to a credit card security\
        \ deposit. It specifies the purpose of the transaction, which refers to an\
        \ initial deposit, statement of credit, return of funds to customer, etc."
      example: return
      x-standardized-attribute-version-id: 1f1de996-77d1-48d4-a8f5-2dcae214e0df
    SecurityDepositTransactionUtcTimestamp:
      type: string
      description: A security deposit transaction UTC timestamp is the date and time
        when the security deposit transaction occurs for either pre-booked (approved
        but not yet activated) and activated customers. This timestamp is expressed
        in ISO 8601 datetime format "YYYY-MM-DDThh:mm:ssTZD".
      format: date-time
      example: 2021-07-01T01:30:45Z
      x-standardized-attribute-version-id: b4d5a352-5ada-4ddc-ad2c-a28f3765383f
    SecurityDepositTransactionSourceSystemName:
      type: string
      description: The security deposit transaction source system name is a string
        of text that identifies the platform or application system associated with
        the security deposit transaction that is posted to the security deposit. It
        helps to identify the origin of each transaction and can be external or internal.
      example: Bedrock
      x-standardized-attribute-version-id: f2c73a15-bd7a-4199-aeee-6a54d5cf7450
    SecurityDepositSourceSystemTransactionId:
      type: string
      description: The security deposit source system transaction ID is a unique identifier
        for a transaction executed on the source system or platform for transactions
        posted to a security deposit. This identifier is generated and assigned by
        the source system and is used for traceability of the transaction across systems.
      example: 782031d1-a13c-4930-b553-ed72ea753735
      x-standardized-attribute-version-id: 4482f95a-8a7a-4452-a5d5-b197fa48a980
    DecisionRequestorKeyValue:
      type: string
      description: The decision requestor key value is the value of the attribute
        provided by the system requesting a decision that uniquely identifies the
        record (ex. a financial product application being submitted by the customer)
        upon which a decision is being made. This is the value of the identifying
        key for the data product and/or system of record relevant for that record
        and can be leveraged to trace a decision across various data assets/events.
        This must be paired with a decision requestor key name to be meaningful.
      example: 878c718e-3949-449f-8a9b-866acd5621ee
      x-standardized-attribute-version-id: 2bd96f39-3a29-41de-91b1-b302f1e1d652
    DecisionRequestorKeyName:
      type: string
      description: The decision requestor key name is the physical name of the attribute
        used by the system requesting a decision to uniquely identify the record (ex.
        a financial product application being submitted by the customer) upon which
        a decision is being made. The named attribute is the identifying key for the
        data product or system of record relevant for that record.
      example: someKindOfId
      x-standardized-attribute-version-id: 66aea9cc-93bb-4375-a2e6-41ecac51fbbb
    PaymentRecordSourceSystemName:
      type: string
      description: A payment record source system name is a string of text that identifies
        a platform or application system that stores a customer's bank account or
        payment card information used for processing a security deposit.
      example: Bedrock
      x-standardized-attribute-version-id: 106f9e68-cd36-4cf0-b2ac-aa5988d63232
    SourceSystemPaymentRecordId:
      type: string
      description: A source system payment record ID a unique identifier for an record
        of a customer's bank account or payment card information within an application
        that stores this information for payment processing. This record serves as
        official documentation of a financial transaction.
      example: 878c718e-3949-449f-8a9b-866acd5621ee
      x-standardized-attribute-version-id: c07827f1-9390-4e48-b052-e45cf43ebea6
    RelatedTransactions:
      type: array
      description: "A list of all of the transaction records associated with the requested\
        \ transaction. any transaction with the same securityDepositPrimaryTransactionId\
        \ will be included in the array sorted in descending order so the most recent\
        \ transaction is in the 0th index of the array and the oldest transaction\
        \ appears last in the array. \n"
      items:
        $ref: '#/components/schemas/SecurityDepositTransactionResponse'
    TransactionHistory:
      type: array
      description: A list of all of the transaction records associated with the requested
        security deposit id sorted in descending order so the most recent transaction
        is in the 0th index of the array and the oldest transaction appears last in
        the array.
      items:
        $ref: '#/components/schemas/SecurityDepositTransactionResponse'
    DepositHistory:
      type: array
      description: A complete list of historical security deposit id records
      items:
        $ref: '#/components/schemas/SecurityDepositIdResponse'
    SecurityDepositTransactionResponse:
      required:
      - securityDepositTransactionId
      type: object
      properties:
        securityDepositTransactionId:
          $ref: '#/components/schemas/SecurityDepositTransactionId'
      description: The response schema of any transaction. it includes the entire
        database row for this specific transaction including the unique identifier
        securityDepositTransactionId
      allOf:
      - $ref: '#/components/schemas/SecurityDepositTransactionBase'
    SecurityDepositTransactionResponseWithRelated:
      type: object
      properties:
        relatedTransactions:
          $ref: '#/components/schemas/RelatedTransactions'
      description: "The response schema of any transaction. it includes the entire\
        \ database row for this specific transaction including the unique identifier\
        \ securityDepositTransactionId. In addition, this schema includes the array\
        \ of related transactions"
      allOf:
      - $ref: '#/components/schemas/SecurityDepositTransactionResponse'
    CreateSecurityDepositRequest:
      required:
      - decisionRequestorKeyName
      - decisionRequestorKeyValue
      properties:
        decisionRequestorKeyValue:
          description: The decision requestor key value is the value of the attribute
            provided by the system requesting a decision that uniquely identifies
            the record (ex. a financial product application being submitted by the
            customer) upon which a decision is being made. This is the value of the
            identifying key for the data product and/or system of record relevant
            for that record and can be leveraged to trace a decision across various
            data assets/events. This must be paired with a decision requestor key
            name to be meaningful.
          allOf:
          - $ref: '#/components/schemas/DecisionRequestorKeyValue'
          x-standardized-attribute-version-id: 2bd96f39-3a29-41de-91b1-b302f1e1d652
        decisionRequestorKeyName:
          description: The decision requestor key name is the physical name of the
            attribute used by the system requesting a decision to uniquely identify
            the record (ex. a financial product application being submitted by the
            customer) upon which a decision is being made. The named attribute is
            the identifying key for the data product or system of record relevant
            for that record.
          allOf:
          - $ref: '#/components/schemas/DecisionRequestorKeyName'
          x-standardized-attribute-version-id: 66aea9cc-93bb-4375-a2e6-41ecac51fbbb
      description: The required request body in order to create a new security deposit
        id
    SecurityDepositTransactionBase:
      required:
      - paymentRecordSourceSystemName
      - postedSecurityDepositTransactionAmount
      - postedSecurityDepositTransactionStatus
      - securityDepositSourceSystemTransactionId
      - securityDepositTransactionCategory
      - securityDepositTransactionSourceSystemName
      - securityDepositTransactionUtcTimestamp
      - sourceSystemPaymentRecordId
      - transactionDebitCreditType
      properties:
        postedSecurityDepositTransactionAmount:
          description: A posted security deposit transaction amount is the monetary
            quantity recorded as a completed transaction for a security deposit that
            is tied to a credit card account. This amount is unsigned and represents
            the absolute value of the change and not whether it increased or decreased
            the customer’s balance.
          allOf:
          - $ref: '#/components/schemas/PostedSecurityDepositTransactionAmount'
          x-standardized-attribute-version-id: dfaf9f89-1b8d-4839-956f-57d298bc7783
        postedSecurityDepositTransactionStatus:
          description: "A posted security deposit transaction status is the state\
            \ of a financial transaction where the crediting or debiting of a security\
            \ deposit's balance that has been cleared, uncleared, or returned."
          allOf:
          - $ref: '#/components/schemas/PostedSecurityDepositTransactionStatus'
          x-standardized-attribute-version-id: 90d3cae3-ff50-44a5-b766-1eab665ebc3a
        transactionDebitCreditType:
          description: A transaction debit credit type is a categorization that indicates
            whether an action that intends to transfer assets will have the effect
            of decreasing or increasing the balance on the account of the customer
            initiating the action.
          allOf:
          - $ref: '#/components/schemas/TransactionDebitCreditType'
          x-standardized-attribute-version-id: 672c628e-8981-4b88-a4e7-60cef5e96398
        securityDepositTransactionCategory:
          description: "A security deposit transaction category is the classification\
            \ of a security deposit transaction that is tied to a credit card security\
            \ deposit. It specifies the purpose of the transaction, which refers to\
            \ an initial deposit, statement of credit, return of funds to customer,\
            \ etc."
          allOf:
          - $ref: '#/components/schemas/SecurityDepositTransactionCategory'
          x-standardized-attribute-version-id: 1f1de996-77d1-48d4-a8f5-2dcae214e0df
        securityDepositTransactionUtcTimestamp:
          type: string
          format: date-time
          example: 2021-07-01T01:30:45Z
          description: A security deposit transaction UTC timestamp is the date and
            time when the security deposit transaction occurs for either pre-booked
            (approved but not yet activated) and activated customers. This timestamp
            is expressed in ISO 8601 datetime format "YYYY-MM-DDThh:mm:ssTZD".
          allOf:
          - $ref: '#/components/schemas/SecurityDepositTransactionUtcTimestamp'
          x-standardized-attribute-version-id: b4d5a352-5ada-4ddc-ad2c-a28f3765383f
        securityDepositPrimaryTransactionId:
          description: "A security deposit primary transaction ID is an alphanumeric\
            \ string of text that uniquely identifies the primary transaction that\
            \ is related to a series of transactions. This ID is used to logically\
            \ group transactions that are part of the same series of events, such\
            \ as funding, adjustments, or refunds, within the security deposit process.\
            \ All related transactions reference the first transaction in the group,\
            \ facilitating easier tracking and management of associated transactions."
          allOf:
          - $ref: '#/components/schemas/SecurityDepositPrimaryTransactionId'
          x-standardized-attribute-version-id: aae59bec-f148-42f6-961a-8556da1a6317
        securityDepositTransactionSourceSystemName:
          description: The security deposit transaction source system name is a string
            of text that identifies the platform or application system associated
            with the security deposit transaction that is posted to the security deposit.
            It helps to identify the origin of each transaction and can be external
            or internal.
          allOf:
          - $ref: '#/components/schemas/SecurityDepositTransactionSourceSystemName'
          x-standardized-attribute-version-id: f2c73a15-bd7a-4199-aeee-6a54d5cf7450
        securityDepositSourceSystemTransactionId:
          description: The security deposit source system transaction ID is a unique
            identifier for a transaction executed on the source system or platform
            for transactions posted to a security deposit. This identifier is generated
            and assigned by the source system and is used for traceability of the
            transaction across systems.
          allOf:
          - $ref: '#/components/schemas/SecurityDepositSourceSystemTransactionId'
          x-standardized-attribute-version-id: 4482f95a-8a7a-4452-a5d5-b197fa48a980
        paymentRecordSourceSystemName:
          description: A payment record source system name is a string of text that
            identifies a platform or application system that stores a customer's bank
            account or payment card information used for processing a security deposit.
          allOf:
          - $ref: '#/components/schemas/PaymentRecordSourceSystemName'
          x-standardized-attribute-version-id: 106f9e68-cd36-4cf0-b2ac-aa5988d63232
        sourceSystemPaymentRecordId:
          description: A source system payment record ID a unique identifier for an
            record of a customer's bank account or payment card information within
            an application that stores this information for payment processing. This
            record serves as official documentation of a financial transaction.
          allOf:
          - $ref: '#/components/schemas/SourceSystemPaymentRecordId'
          x-standardized-attribute-version-id: c07827f1-9390-4e48-b052-e45cf43ebea6
      description: A basic security deposit transaction schema used to make a new
        transaction through the POST endpoint
    SecurityDepositIdResponse:
      required:
      - lastUpdatedUtcTimestamp
      - securityDepositAvailableBalance
      - securityDepositId
      - securityDepositStatus
      - securityDepositUnavailableBalance
      properties:
        securityDepositStatus:
          description: The security deposit status is a string of text that determines
            the most recent operational status of the security deposit.
          allOf:
          - $ref: '#/components/schemas/SecurityDepositStatus'
          x-standardized-attribute-version-id: ccc3875d-5864-4319-8e78-458395dbc458
        securityDepositId:
          description: The security deposit ID is a unique identifier for the security
            deposit associated with a secured card owned by either pre-booked (approved
            but not yet activated) and activated customers. This identifier is universally
            unique and is not related to other identifiers.
          allOf:
          - $ref: '#/components/schemas/SecurityDepositId'
          x-standardized-attribute-version-id: 4b150be7-9364-4106-bcd9-8c5e8a53b231
        securityDepositAvailableBalance:
          description: The security deposit available balance is the monetary amount
            of the cleared or available balance for a security deposit. The balance
            reflects the portion of the security deposit that is available for user
            utilization. The available balance is not equivalent to the credit limit.
          allOf:
          - $ref: '#/components/schemas/SecurityDepositAvailableBalance'
          x-standardized-attribute-version-id: e5c594ed-13a3-46ff-ba95-184d6ed058a8
        securityDepositUnavailableBalance:
          description: The security deposit unavailable balance is the monetary amount
            of the portion of the security deposit that is uncleared or unavailable
            for user utilization. This balance represents a temporary hold on funds.
            Uncleared deposited funds will not be reflected on linked credit lines
            until they are cleared.
          allOf:
          - $ref: '#/components/schemas/SecurityDepositUnavailableBalance'
          x-standardized-attribute-version-id: 06d43507-992e-4c3e-9c67-4f24a0361f8f
        lastUpdatedUtcTimestamp:
          type: string
          format: date-time
          example: 2021-07-01T01:30:45Z
          description: A last updated UTC timestamp is the most recent record of a
            point in time when an event occured. This timestamp is expressed in ISO
            8601 datetime format "YYYY-MM-DDThh:mm:ssTZD" in Coordinated Universal
            Time (UTC).
          allOf:
          - $ref: '#/components/schemas/LastUpdatedUtcTimestamp'
          x-standardized-attribute-version-id: c3b0ca69-34ff-491c-9461-9d210ab9418d
      description: The current full balance summary of a security deposit id. This
        includes only the most recent row of data for a given security deposit id.
    SecurityDepositWithTransactionHistoryResponse:
      required:
      - transactionHistory
      properties:
        transactionHistory:
          $ref: '#/components/schemas/TransactionHistory'
      description: The current balance summary of a security deposit id including
        the transaction history array which is a complete set of transactions associated
        with the given security deposit id.
      allOf:
      - $ref: '#/components/schemas/SecurityDepositIdResponse'
    SecurityDepositWithTransactionResponse:
      required:
      - transaction
      properties:
        transaction:
          $ref: '#/components/schemas/SecurityDepositTransactionResponse'
      description: The current balance summary of a security deposit id including
        the transaction that was created through a successful call to this endpoint
      allOf:
      - $ref: '#/components/schemas/SecurityDepositIdResponse'
    SecurityDepositTotalResponse:
      required:
      - depositHistory
      - transactionHistory
      properties:
        transactionHistory:
          $ref: '#/components/schemas/TransactionHistory'
        depositHistory:
          $ref: '#/components/schemas/DepositHistory'
      description: The current balance summary of a security deposit id including
        the complete set of transactions associated with the requested security deposit
        id as well as the historical security deposit id records.
      allOf:
      - $ref: '#/components/schemas/SecurityDepositIdResponse'
    Error400Response:
      properties:
        id:
          type: integer
          description: unique id identifies the type of error that was encountered.
          example: 103040
        developerText:
          type: string
          description: Error message that's meant to be used during development and
            debugging.
          example: bad request
      description: Bad Request
    Error404Response:
      properties:
        id:
          type: integer
          description: unique id identifies the type of error that was encountered.
          example: 102030
        developerText:
          type: string
          description: Error message that's meant to be used during development and
            debugging.
          example: not found
      description: Resource not found
    Error409Response:
      properties:
        id:
          type: integer
          description: unique id identifies the type of error that was encountered.
          example: 104050
        developerText:
          type: string
          description: Error message that's meant to be used during development and
            debugging.
          example: the resource has already been created
      description: A resource has already been created for the requested entity
    Error500Response:
      properties:
        id:
          type: integer
          description: unique id identifies the type of error that was encountered.
          example: 101010
        developerText:
          type: string
          description: Error message that's meant to be used during development and
            debugging.
          example: internal server error
      description: Internal server error
  parameters:
    SecurityDepositId:
      name: securityDepositId
      in: path
      description: The security deposit ID is a unique identifier for the security
        deposit associated with a secured card owned by either pre-booked (approved
        but not yet activated) and activated customers. This identifier is universally
        unique and is not related to other identifiers.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 3568147e-cf25-44fe-bc01-f9c617c04866
    SecurityDepositTransactionId:
      name: securityDepositTransactionId
      in: path
      description: "The security deposit transaction ID is a unique identifier assigned\
        \ to each individual security deposit transaction. This ID is used to track\
        \ and differentiate specific transactions related to security deposits only,\
        \ allowing each transaction to be referenced and audited. It applies to either\
        \ pre-booked (approved but not yet activated) and activated customers, ensuring\
        \ all security deposit related transactions are captured throughout Capital\
        \ One's system."
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: 3568147e-cf25-44fe-bc01-f9c617c04866
    SecurityDepositInclude:
      name: include
      in: query
      description: A CSV of extra data to include in the response object. Possible
        values are __depositHistory__ and __transactionHistory__
      required: false
      style: form
      explode: false
      schema:
        type: string
        example: "depositHistory,transactionHistory"
    TransactionInclude:
      name: include
      in: query
      description: A CSV of extra data to include in the response object. Possible
        values are __relatedTransactions__
      required: false
      style: form
      explode: false
      schema:
        type: string
        example: relatedTransactions
  headers:
    Location:
      description: The URL of the resource that was created.
      required: true
      style: simple
      explode: false
      schema:
        type: string
        example: /credit-cards/security-deposits/25c2eced-b77b-4597-a9c3-dcdb8fe658eb

